package com.yeongjin.YeongJin.Controller;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

@WebMvcTest
class PostControllerTest {

    @Autowired
    private MockMvc mockMvc;
    @Autowired
    PostControllerTest(MockMvc mockMvc) {
        this.mockMvc = mockMvc;
    }



    @Test
    @DisplayName("/posts요청시 helloworld를 출력한다")
    void test() throws Exception {
        //글 내용
        //글 제목


        //expected
        mockMvc.perform(MockMvcRequestBuilders.post("/posts")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content("{\"title\": \"null\", \"content\": \"내용입니다.\"}")//json형태
                )
                .andExpect(MockMvcResultMatchers.status().isOk())
                .andExpect(MockMvcResultMatchers.content().string("hello world"))
                .andDo(MockMvcResultHandlers.print());
    }
    @Test
    @DisplayName("/posts요청시 title값은 필수다")
    void test2() throws Exception {
        //글 내용
        //글 제목


        //expected
        mockMvc.perform(MockMvcRequestBuilders.post("/posts")
                                .contentType(MediaType.APPLICATION_JSON)
                                .content("{\"title\": \"제목입니다.\", \"content\": \"내용입니다.\"}")//json형태
                        )
                        .andExpect(MockMvcResultMatchers.status().isOk())
                        //.andExpect(MockMvcResultMatchers.content().string("{}"))
                        .andExpect(MockMvcResultMatchers.jsonPath("$.title").value("타이틀을입력해주세여"))
                        .andDo(MockMvcResultHandlers.print());

    }
}
